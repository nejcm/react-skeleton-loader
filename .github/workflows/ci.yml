name: ci
on:
  pull_request:
    branches: [main, master]

  workflow_dispatch:

jobs:
  ci:
    name: Running...
    if:
      "!contains(toJSON(github.event.commits.*.message), 'chore(release):') &&
      github.event.pull_request.draft != true"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18]
    env:
      CI: true

    steps:
      - name: 🛒 Checkout code
        uses: actions/checkout@v3

      - name: 💿 Setup Nodejs
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: 💾 Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: 💾 Cache
        uses: actions/cache@v3
        id: yarn-cache
        with:
          path: |
            **/node_modules
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn

      - name: 🧩 Install dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install --prefer-offline --frozen-lockfile

      - name: 📋 Yarn Lock Changes
        uses: Simek/yarn-lock-changes@main
        with:
          updateComment: 'true'
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: ✏️ Lint
        run: yarn lint

      - name: 🧪 Test
        run: yarn test
